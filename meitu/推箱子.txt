#include<stdio.h>
#include<Windows.h>
#include<conio.h>
#define t message[game][1]
int game=3,message[100][2]={{8,8},{9,9},{7,10},{8,9}},
	map_1[8][8]={{0,0,1,1,1},{0,0,1,3,1},{0,0,1,0,1,1,1,1},{1,1,1,4,0,4,3,1},{1,3,0,4,5,1,1,1},{1,1,1,1,4,1},{0,0,0,1,3,1},{0,0,0,1,1,1}},
	map_2[9][9]={{1,1,1,1,1},{1,5,0,0,1},{1,0,4,4,1,0,1,1,1},{1,0,4,0,1,0,1,3,1},{1,1,1,0,1,1,1,3,1},{0,1,1,0,0,0,0,3,1},{0,1,0,0,0,1,0,0,1},{0,1,0,0,0,1,1,1,1},{0,1,1,1,1,1}},
	map_3[7][10]={{0,1,1,1,1,1,1,1},{0,1,0,0,0,0,0,1,1,1},{1,1,4,1,1,1,0,0,0,1},{1,0,5,0,4,0,0,4,0,1},{1,0,3,3,1,0,4,0,1,1},{1,1,3,3,1,0,0,0,1,1},{0,1,1,1,1,1,1,1,1}},
	map_4[8][9]={{0,0,0,1,1,1,1,1,1},{1,1,1,1,3,0,0,5,1},{1,0,0,4,4,4,0,0,1},{1,3,1,1,3,1,1,3,1,},{1,0,0,0,4,0,0,0,1},{1,0,0,4,3,1,0,1,1},{1,1,1,1,0,0,0,1},{0,0,0,1,1,1,1,1}},
	*p[100]={&map_1[0][0],&map_2[0][0],&map_3[0][0],&map_4[0][0]},
	*man[100]={&map_1[4][4],&map_2[1][1],&map_3[3][2],&map_4[1][7]};
void prin()
{
	int i,j;
	for(i=0;i<message[game][0];i++)
		{for(j=0;j<message[game][1];j++)
			switch(*(p[game]+i*message[game][1]+j)){
			case 0:printf("  ");break;
			case 1:printf("■");break;
			case 3:printf("●");break;
			case 4:printf("□");break;
			case 5:printf("♀");break;
			case 7:printf("□");break;
			case 8:printf("♀");break;
		}
	printf("\n");}
}
int judge()
{
	int i,j;
	for(i=0;i<message[game][0];i++)
		for(j=0;j<message[game][1];j++)
			if(*(p[game]+i*message[game][0]+j)==4)
				return -1;
			return 1;
}
int move(char ch)
{
	switch(ch)
	{
	case'a':
		{
			if(*(man[game]-1)==0){*(man[game]-1)=*(man[game]-1)+5;*(man[game])=*(man[game])-5;man[game]--;return 0;}//移动的地方为空；
			else if(*(man[game]-1)==1){return 0;}//移动的地方为墙；
			else if(*(man[game]-1)==3){*(man[game]-1)=*(man[game]-1)+5;*(man[game])=*(man[game])-5;man[game]--;return 0;}//移动的地方为目的地；
			else if(*(man[game]-1)==4){if(*(man[game]-2)==0||*(man[game]-2)==3){*(man[game])=*(man[game])-5;*(man[game]-1)=*(man[game]-1)+1;*(man[game]-2)=*(man[game]-2)+4;man[game]--;return 0;}else return 0;}
			else if(*(man[game]-1)==7){if(*(man[game]-2)==0||*(man[game]-2)==3){*(man[game])=*(man[game])-5;*(man[game]-1)=*(man[game]-1)+1;*(man[game]-2)=*(man[game]-2)+4;man[game]--;return 0;}else return 0;}
		}
	case'd':
		{if(*(man[game]+1)==0){*(man[game]+1)=*(man[game]+1)+5;*(man[game])=*(man[game])-5;man[game]++;return 0;}
		else if(*(man[game]+1)==1){return 0;}//移动的地方为墙；
		else if(*(man[game]+1)==3){*(man[game]+1)=*(man[game]+1)+5;*(man[game])=*(man[game])-5;man[game]++;return 0;}
		else if(*(man[game]+1)==4){if(*(man[game]+2)==0||*(man[game]+2)==3){*(man[game])=*(man[game])-5;*(man[game]+1)=*(man[game]+1)+1;*(man[game]+2)=*(man[game]+2)+4;man[game]++;return 0;}else return 0;}
		else if(*(man[game]+1)==7){if(*(man[game]+2)==0||*(man[game]+2)==3){*(man[game])=*(man[game])-5;*(man[game]+1)=*(man[game]+1)+1;*(man[game]+2)=*(man[game]+2)+4;man[game]++;return 0;}else return 0;}
        }
	case'w':
		{if(*(man[game]-t)==0){*(man[game]-t)=*(man[game]-t)+5;*(man[game])=*(man[game])-5;man[game]=man[game]-t;return 0;}
        else if(*(man[game]-t)==1){return 0;}//移动的地方为墙；
		else if(*(man[game]-t)==3){*(man[game]-t)=*(man[game]-t)+5;*(man[game])=*(man[game])-5;man[game]=man[game]-t;return 0;}
		else if(*(man[game]-t)==4){if(*(man[game]-2*t)==0||*(man[game]-2*t)==3){*(man[game])=*(man[game])-5;*(man[game]-t)=*(man[game]-t)+1;*(man[game]-2*t)=*(man[game]-2*t)+4;man[game]=man[game]-t;return 0;}else return 0;}
		else if(*(man[game]-t)==7){if(*(man[game]-2*t)==0||*(man[game]-2*t)==3){*(man[game])=*(man[game])-5;*(man[game]-t)=*(man[game]-t)+1;*(man[game]-2*t)=*(man[game]-2*t)+4;man[game]=man[game]-t;return 0;}else return 0;}
		}
	case's':
		{if(*(man[game]+t)==0){*(man[game]+t)=*(man[game]+t)+5;*(man[game])=*(man[game])-5;man[game]=man[game]+t;return 0;}
        else if(*(man[game]+t)==1){return 0;}//移动的地方为墙；
		else if(*(man[game]+t)==3){*(man[game]+t)=*(man[game]+t)+5;*(man[game])=*(man[game])-5;man[game]=man[game]+t;return 0;}
		else if(*(man[game]+t)==4){if(*(man[game]+2*t)==0||*(man[game]+2*t)==3){*(man[game])=*(man[game])-5;*(man[game]+t)=*(man[game]+t)+1;*(man[game]+2*t)=*(man[game]+2*t)+4;man[game]=man[game]+t;return 0;}else return 0;}
		else if(*(man[game]+t)==7){if(*(man[game]+2*t)==0||*(man[game]+2*t)==3){*(man[game])=*(man[game])-5;*(man[game]+t)=*(man[game]+t)+1;*(man[game]+2*t)=*(man[game]+2*t)+4;man[game]=man[game]+t;return 0;}else return 0;}
		}
	}
	return 0;
}
int main()
{
	char ch;
	while(1)
	{
		system("cls");
		prin();
		if(judge()==1)
		{Sleep(1000);game++;system("cls");prin();}
		ch=getch();
		switch(ch){
		case'w':
		case'W':move('w');break;
		case'a':
		case'A':move('a');break;
		case's':
		case'S':move('s');break;
		case'd':
		case'D':move('d');break;
		}
	}
	return 0;
}